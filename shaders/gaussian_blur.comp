#version 430 core

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

const int TAP = 5; //Must be odd
const int BOUND = TAP / 2;
const float GAUSSIAN_WEIGHTS[TAP / 2 + 1] = float[](0.23273657289002558, 0.21483375959079284, 0.16879795396419436);

restrict layout(rgba8, binding = 0) uniform image2D ping_im;
uniform float elapsed_time;

void main() {
    ivec2 image_coord = ivec2(gl_GlobalInvocationID.xy);
    vec3 pixel = imageLoad(ping_im, image_coord).rgb;

    {
        vec3 res = vec3(0.0);
        for (int i = -BOUND; i <= BOUND; i++) {
            ivec2 unit_offset = ivec2(1, 0);
            vec3 sam = imageLoad(ping_im, image_coord + i * unit_offset).rgb;
            res += sam * GAUSSIAN_WEIGHTS[abs(i)];
        }
        imageStore(ping_im, image_coord, vec4(res, 1.0));
    }

    barrier();

    {
        vec3 res = vec3(0.0);
        for (int i = -BOUND; i <= BOUND; i++) {
            ivec2 unit_offset = ivec2(0, 1);
            vec3 sam = imageLoad(ping_im, image_coord + i * unit_offset).rgb;
            res += sam * GAUSSIAN_WEIGHTS[abs(i)];
        }
        imageStore(ping_im, image_coord, vec4(res, 1.0));
    }
}


